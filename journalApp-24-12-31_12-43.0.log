2024-12-31 12:43:15 [main] INFO  c.R.journalApp.JournalAppApplication - Starting JournalAppApplication using Java 21.0.1 with PID 1112 (E:\New folder (4)\journalApp\target\classes started by karan in E:\New folder (4)\journalApp)
2024-12-31 12:43:15 [main] INFO  c.R.journalApp.JournalAppApplication - No active profile set, falling back to 1 default profile: "default"
2024-12-31 12:43:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-31 12:43:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-12-31 12:43:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 414 ms. Found 3 MongoDB repository interfaces.
2024-12-31 12:43:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-12-31 12:43:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-12-31 12:43:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.RestApi.journalApp.Repository.ConfigRepositry; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-31 12:43:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.RestApi.journalApp.Repository.JournalEntryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-31 12:43:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.RestApi.journalApp.Repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-12-31 12:43:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2024-12-31 12:43:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2024-12-31 12:43:20 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2024-12-31 12:43:20 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-12-31 12:43:20 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-12-31 12:43:20 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-12-31 12:43:20 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4510 ms
2024-12-31 12:43:21 [cluster-ClusterId{value='677399912bde846e0096484e', description='Cluster1'}-srv-cluster1.wynaa.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster1-shard-00-02.wynaa.mongodb.net:27017 to client view of cluster
2024-12-31 12:43:21 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"application": {"name": "Cluster1"}, "driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.4"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.1+12-LTS-29"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='Karan', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6274f21c, com.mongodb.Jep395RecordCodecProvider@35cec305, com.mongodb.KotlinCodecProvider@237add]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster1.wynaa.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-j7pccp-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='80000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=50000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=50000, readTimeoutMS=50000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='Cluster1', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-12-31 12:43:21 [cluster-ClusterId{value='677399912bde846e0096484e', description='Cluster1'}-srv-cluster1.wynaa.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster1-shard-00-00.wynaa.mongodb.net:27017 to client view of cluster
2024-12-31 12:43:21 [cluster-ClusterId{value='677399912bde846e0096484e', description='Cluster1'}-srv-cluster1.wynaa.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster1-shard-00-01.wynaa.mongodb.net:27017 to client view of cluster
2024-12-31 12:43:22 [main] INFO  org.mongodb.driver.cluster - No server chosen by WritableServerSelector from cluster description ClusterDescription{type=REPLICA_SET, connectionMode=MULTIPLE, serverDescriptions=[ServerDescription{address=cluster1-shard-00-02.wynaa.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}, ServerDescription{address=cluster1-shard-00-01.wynaa.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}, ServerDescription{address=cluster1-shard-00-00.wynaa.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 80000 ms before timing out
2024-12-31 12:43:23 [cluster-ClusterId{value='677399912bde846e0096484e', description='Cluster1'}-cluster1-shard-00-02.wynaa.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster1-shard-00-02.wynaa.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=904127400, setName='atlas-j7pccp-shard-0', canonicalAddress=cluster1-shard-00-02.wynaa.mongodb.net:27017, hosts=[cluster1-shard-00-02.wynaa.mongodb.net:27017, cluster1-shard-00-00.wynaa.mongodb.net:27017, cluster1-shard-00-01.wynaa.mongodb.net:27017], passives=[], arbiters=[], primary='cluster1-shard-00-01.wynaa.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=170, topologyVersion=TopologyVersion{processId=676e4b76af209399afd1aa56, counter=3}, lastWriteDate=Tue Dec 31 12:43:24 GMT+05:30 2024, lastUpdateTimeNanos=57334101019000}
2024-12-31 12:43:23 [cluster-ClusterId{value='677399912bde846e0096484e', description='Cluster1'}-cluster1-shard-00-00.wynaa.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster1-shard-00-00.wynaa.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=901239500, setName='atlas-j7pccp-shard-0', canonicalAddress=cluster1-shard-00-00.wynaa.mongodb.net:27017, hosts=[cluster1-shard-00-02.wynaa.mongodb.net:27017, cluster1-shard-00-00.wynaa.mongodb.net:27017, cluster1-shard-00-01.wynaa.mongodb.net:27017], passives=[], arbiters=[], primary='cluster1-shard-00-01.wynaa.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=170, topologyVersion=TopologyVersion{processId=676e4aa85f0397f19c2bb362, counter=4}, lastWriteDate=Tue Dec 31 12:43:24 GMT+05:30 2024, lastUpdateTimeNanos=57334098066100}
2024-12-31 12:43:23 [cluster-ClusterId{value='677399912bde846e0096484e', description='Cluster1'}-cluster1-shard-00-01.wynaa.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster1-shard-00-01.wynaa.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=896821700, setName='atlas-j7pccp-shard-0', canonicalAddress=cluster1-shard-00-01.wynaa.mongodb.net:27017, hosts=[cluster1-shard-00-02.wynaa.mongodb.net:27017, cluster1-shard-00-00.wynaa.mongodb.net:27017, cluster1-shard-00-01.wynaa.mongodb.net:27017], passives=[], arbiters=[], primary='cluster1-shard-00-01.wynaa.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000009d, setVersion=170, topologyVersion=TopologyVersion{processId=676e49de34d030b19ea9059c, counter=6}, lastWriteDate=Tue Dec 31 12:43:24 GMT+05:30 2024, lastUpdateTimeNanos=57334101419100}
2024-12-31 12:43:23 [cluster-ClusterId{value='677399912bde846e0096484e', description='Cluster1'}-cluster1-shard-00-01.wynaa.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster1-shard-00-01.wynaa.mongodb.net:27017 with max election id 7fffffff000000000000009d and max set version 170
2024-12-31 12:43:27 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@31dbf5bb, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1f19d423, org.springframework.security.web.context.SecurityContextHolderFilter@1fba3fd6, org.springframework.security.web.header.HeaderWriterFilter@6f80cf5, org.springframework.security.web.authentication.logout.LogoutFilter@86bf90b, com.RestApi.journalApp.Filter.JwtFilter@45dde6ac, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6badb08c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@103bcc9f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@73958426, org.springframework.security.web.session.SessionManagementFilter@2ca132ad, org.springframework.security.web.access.ExceptionTranslationFilter@4cacccbf, org.springframework.security.web.access.intercept.AuthorizationFilter@36330be8]
2024-12-31 12:43:27 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2024-12-31 12:43:27 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path ''
2024-12-31 12:43:27 [main] INFO  c.R.journalApp.JournalAppApplication - Started JournalAppApplication in 14.177 seconds (process running for 15.814)
2024-12-31 12:43:32 [http-nio-8081-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-12-31 12:43:32 [http-nio-8081-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-12-31 12:43:32 [http-nio-8081-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2024-12-31 12:43:43 [http-nio-8081-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Malformed protected header JSON: Unable to deserialize: Unexpected character ('�' (code 65533 / 0xfffd)): was expecting a colon to separate field name and value
 at [Source: (InputStreamReader); line: 1, column: 20]
	at io.jsonwebtoken.impl.io.JsonObjectDeserializer.malformed(JsonObjectDeserializer.java:76)
	at io.jsonwebtoken.impl.io.JsonObjectDeserializer.apply(JsonObjectDeserializer.java:70)
	at io.jsonwebtoken.impl.DefaultJwtParser.deserialize(DefaultJwtParser.java:899)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:382)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:364)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:830)
	at com.RestApi.journalApp.Utils.JwtUtil.extractAllClaims(JwtUtil.java:53)
	at com.RestApi.journalApp.Utils.JwtUtil.extractUsername(JwtUtil.java:27)
	at com.RestApi.journalApp.Filter.JwtFilter.doFilterInternal(JwtFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.jsonwebtoken.io.DeserializationException: Unable to deserialize: Unexpected character ('�' (code 65533 / 0xfffd)): was expecting a colon to separate field name and value
 at [Source: (InputStreamReader); line: 1, column: 20]
	at io.jsonwebtoken.io.AbstractDeserializer.deserialize(AbstractDeserializer.java:72)
	at io.jsonwebtoken.impl.io.JsonObjectDeserializer.apply(JsonObjectDeserializer.java:52)
	... 67 common frames omitted
Caused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character ('�' (code 65533 / 0xfffd)): was expecting a colon to separate field name and value
 at [Source: (InputStreamReader); line: 1, column: 20]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2477)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:750)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:674)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipColon2(ReaderBasedJsonParser.java:2389)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipColon(ReaderBasedJsonParser.java:2368)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextFieldName(ReaderBasedJsonParser.java:971)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR._deserializeNR(UntypedObjectDeserializerNR.java:230)
	at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR.deserialize(UntypedObjectDeserializerNR.java:70)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3785)
	at io.jsonwebtoken.jackson.io.JacksonDeserializer.doDeserialize(JacksonDeserializer.java:138)
	at io.jsonwebtoken.io.AbstractDeserializer.deserialize(AbstractDeserializer.java:66)
	... 68 common frames omitted
